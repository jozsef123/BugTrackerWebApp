@model PaginatedList<BugTrackerWebApp.Models.Ticket>
@{
    ViewData["Title"] = "Index";
}

<h1>Tickets</h1>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>


@using (Html.BeginForm("Index", "Tickets", FormMethod.Get))
{
    <p>
        Find: @Html.TextBox("SearchString")  
        <input type="submit" value="Search" class="btn btn-primary"/>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Project Name
            </th>
            <th>
                Ticket Name
            </th>
            <th>
                Assigned Developer
            </th>
            <th>
                Priority
            </th>
            <th>
                Type
            </th>
            <th>
                <a asp-action="Index" 
                asp-route-sortOrder="@ViewData["StatusSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">Status</a>
            </th>
            <th>
                 <a asp-action="Index" 
                asp-route-sortOrder="@ViewData["DateCreatedSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">Date Created</a>
            </th>
            <th>
                <a asp-action="Index" 
                asp-route-sortOrder="@ViewData["DateUpdatedSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">Date Updated</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedDeveloper.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedWhen)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedWhen)
            </td>
            <td width="200">
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success btn-sm">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
